<%- include("../../views/partials/admin/header") %>
<style>
  .pagination-container {
    text-align: center;
  }
  .pagination {
    display: inline-block;
  }

  .pagination a,
  .pagination .current-page {
    display: inline-block;
    padding: 5px 10px;
    margin: 0 2px;
    border: 1px solid #ddd;
    text-decoration: none;
    color: #333;
  }

  .pagination a:hover {
    background-color: #f5f5f5;
  }
  .error-message {
    color: red;
  }
</style>
<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Brands</h2>
    </div>
  </div>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
          <form method="post" action="/admin/addBrand" enctype="application/json" onsubmit="handleFormSubmition(event)">
            <div class="mb-4">
              <label for="product_name" class="form-label">Brand Name</label>
              <input
                type="text"
                name="name"
                placeholder="Type here"
                class="form-control"
              />
            </div>
            <!-- <label for="product_name" class="form-label">Brand Image</label>
            <div class="input-upload">
              <img src="" alt=""/>
              <input class="form-control border" name="image" type="file" />
            </div> -->
            <div class="d-grid">
              <button class="btn btn-primary mt-20" type="submit">
                Add Brand
              </button>
            </div>
          </form>
        </div>
        <div class="col-md-7 ml-105">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Brand</th>
                  <!-- <th>Logo</th>
                  <th>Status</th> -->
                  <th>Block/Unblock/Delete</th>
                </tr>
              </thead>
              <tbody>
                <%brand.reverse().forEach((brand, index) => {%>
                <tr>
                  <td class="text-start"><%=brand.name%></td>
                  <!-- <td class="text-start"> -->
                    <!-- <div
                      class="d-flex align-items-center justify-content-center"
                      style="
                        width: 40px;
                        height: 40px;
                        border-radius: 50%;
                        overflow: hidden;
                      "
                    >
                      <img
                        src=""
                        alt=""
                        class="img-fluid rounded-circle"
                        style="width: 100%; height: auto"
                      />
                    </div>
                  </td> -->
                  <td class="text-start">
                    <span
                      class="badge rounded-pill alert-danger"
                      style="width: 60px"
                      >Blocked</span
                    >

                    <span
                      class="badge rounded-pill alert-success"
                      style="width: 60px"
                      >Active</span
                    >
                  </td>
                  <td class="text-start">
                    <button class="btn btn-danger" style="width: 90px">
                      <a href="" class="text-white">Block</a>
                    </button>

                    <button class="btn btn-success" style="width: 90px">
                      <a href="" class="text-white">Unblock</a>
                    </button>

                    <button
                      class="btn btn-danger"
                      style="width: 90px"
                      onclick=""
                    >
                      <a href="" class="text-white">Delete</a>
                    </button>
                  </td>
                </tr>
                <%})%>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="pagination-container">
    <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
</div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>
  function handleFormSubmition(event){
    event.preventDefault()
    if(!validateForm){
            return
    }
    const name = document.getElementsByName('name')[0].value
    fetch('/admin/addBrand',{
      method:'POST',
      headers:{
         'Content-Type': 'application/json'
      },
      body:JSON.stringify({
        name,
      })
    })
    .then(data=>{
      location.reload()
    })
    .catch(error =>{
      if(error === 'brand alredy exist'){
        Swal.fire({
                    icon:'error',
                    title:'oops',
                    text:'brand alredy exist'
                })
      }else{
        Swal.fire({
                    icon:'error',
                    title:'oops',
                    text:'An error occurred while adding the brand.'
                })
      }
    })
  }

function validateForm(){
  clearErrorMessage()
  const name = document.getElementsByName('name')[0].value.trim()
  isValid = true 

  if(name === ''){
    displayErrorMessage('name-error','pleace enter a name')
    isValid = false
  }else if (!/^[a-zA-Z\s]+$/.test(name)){
                   displayErrorMessage('name-error','brand name suld in alphabet')
                   isValid=false
            }
            return isValid = true
}

function displayErrorMessage(elementId,message){
            var errorElement = document.getElementById('elementId')
            errorElement.innerText = message
            errorElement.style.display = 'block'
        }
 function clearErrorMessage(){
            const errorElements = document.getElementsByClassName('error-message')
            Array.from(errorElements).forEach((element)=>{
                element.innerText = ''
                element.style.display= 'none'
            })
        }

</script>















const Brand = require('../../models/brandSchema')

const brandInfo = async (req,res) =>{
    try {
        const page = parseInt(req.query.page) || 1;
        const limit = 4
        const skip = (page-1)*limit;

        const brandData = await Brand.find({})
        .sort({createdAt:-1})
        .skip(skip)
        .limit(limit)


        const totalBrands = await Brand.countDocuments()
        const totalPages = Math.ceil(totalBrands / limit)
        res.render('brand',{
            brand:brandData,
            currentPage:page,
            totalPages:totalPages,
            totalBrands:totalBrands

        })
    } catch (error) {
          
        console.error(error);
        res.redirect('/pageerror')
        
    }
}


const addBrand = async (req,res) => {
    const {name} = req.body
    try {
       const existingBrand = await Brand.findOne({name})
       if(existingBrand){
        return res.status(400).json({error:'brand alredy exist'})
       }
       const newBrand = new Brand({name})
       await newBrand.save()
       return res.json({message:'category save succsfuly'})
    } catch (error) {
        return res.status(500).json({ error: 'Internal server error' });
    }
}


module.exports = {
    brandInfo,
    addBrand,
}




//////////////////////////////////////////////////////////////
<%- include("../../views/partials/admin/header") %>
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
   position: relative;
}


.error-message {
           color: red;
           display: none;
       }


   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>


               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">


                   <div class="card-body">
                       <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                           onsubmit=" return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">
                                  
                                <%for(let i=0;i<brand.length;i++){%>     
                                    <option value="<%=brand[i].name%>">
                                        
                                     <%=brand[i].name%>

                                      
                                    </option>
                                    <%}%>
                                      
                               </select>
                               <div id="brand-error" class="error-message"></div>


                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <!-- <div class="col-lg-4">
                                    <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input name="salePrice" type="text" value=""
                                           class="form-control border">
                                   </div> 
                                   <div id="salePrice-error" class="error-message"></div>
                               </div> -->
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input name="quantity" type="text" value="<%=product.quantity%>"
                                           class="form-control border">
                                           <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                             
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input name="color" type="text" value="<%=product.color%>"
                                           class="form-control border">
                                           <div id="color-error" class="error-message"></div>
                                   </div>
                               </div>
                              
                           </div>
                           <div class="card mb-4">


                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                              
                                            <%for(let i=0;i<cat.length;i++){%>     
                                           
                                                <option value="<%=cat[i].name%>">
                                                    <%=cat[i].name%>
                                                </option>
                                               
                                                <%}%>
                                                  
                                           </select>


                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                                  <% for(let i=0;i<product.productImage.length;i++){%>
                                       <div class="col-md-12">
                                           <div class="mb-4">
                                               <div class="col-12">
                                                   <td>
                                                       <input type="hidden" value="<%=product.productImage[i]%>" id="imageDatas">
                                                       <img class="rounded" style="width: 50px; height: 60px;"
                                                           src="/uploads/product-imgs/<%=product.productImage[i]%>"
                                                           alt="">
                                                       <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x"></i>
                                                   </td>
                                               </div>
                                              
                                           </div>
                                       </div>
                                       <%}%>
                              
                                  
                               <div class="card-body">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                       <input class="form-control" type="file" name="images" id="input1"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage1(event), viewImage(event, 1)">
                                           <div id="images-error" class="error-message"></div>
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                   <img src="" id="croppedImg1" alt="">
                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                               </div>
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">
                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">
                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <!-- <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">
                                                                   <input class="form-control" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div> -->
                               </div>
                           </div>
                           <div>


                               <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                   type="button"  onclick="validateAndSubmit()">Update</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
       </div>
   </section>
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>


   <script>


    function validateAndSubmit() {
    if (validateForm()) {
       document.forms[0].submit();
    }
    }
    
    
    
    
    function validateForm() {
       let imageDatas = false
               console.log("validate form");
               clearErrorMessages();
               const name = document.getElementsByName('productName')[0].value;
               const description = document.getElementsByName('descriptionData')[0].value;
               const brand = document.getElementsByName('brand')[0].value;
               const price = document.getElementsByName('regularPrice')[0].value;
               //const saleprice = document.getElementsByName('salePrice')[0].value;
               const color = document.getElementsByName('color')[0].value;
               const category = document.getElementsByName('category')[0].value;
               const images = document.getElementById('input1')
               const quantity=document.getElementsByName('quantity')
    imageDatas = document.getElementById("imageDatas")?.value;
               let isValid = true;    
               if (name.trim() === "") {
       displayErrorMessage('productName-error', 'Please enter a product name.');
       isValid = false;
    }
              
               if (description=== '') {
                   displayErrorMessage('description-error', 'Please enter a product description.');
                   isValid = false;
               } 
    
    
               if ( parseInt(quantity) < 0) {
                   displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                   isValid = false;
               }
    
    
    
    
               if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                   displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                   isValid = false;
               }
            //   if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            //        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            //        isValid = false;
            //    }
              
               if (color.trim() === "") {
                   displayErrorMessage('color-error', 'Please enter a color.');
                   isValid = false;
               }
               if (!imageDatas && images.files.length === 0) {
                   displayErrorMessage("images-error",'Please select an image.');
                   isValid = false;
               }
               return isValid;
           }
          
           function displayErrorMessage(elementId, message) {
               var errorElement = document.getElementById(elementId);
               errorElement.innerText = message;
               errorElement.style.display = "block";
           }
    
    
           function clearErrorMessages() {
               const errorElements = document.getElementsByClassName('error-message');
               Array.from(errorElements).forEach(element => {
                   element.innerText = '';
               });
               const errorMessage = document.getElementById('errorMessage');
    
    
           }
    
    
    
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           
    
    
    
    
           function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };


        //    function deleteSingleImage(imageId,productId){
        //          $.ajax({
        //             url:'/admin/deletImage',
        //             method:'post',
        //             data:{imageNameToServer:imageId,productIdToServer:productId},
        //             success:((response)=>{
        //                 if(response.ststus === true){
        //                     window.location.reload()
        //                 }
        //             })
        //          })
        //    }

        function deleteSingleImage(imageId, productId) {
    $.ajax({
        url: '/admin/deleteImage', // Ensure this URL is correct
        method: 'POST',
        data: {
            imageNameToServer: imageId,
            productIdToServer: productId
        },
        success: ((response) => {
            console.log(response); // Check the response object
            if (response.status === true) { // Corrected typo from 'ststus' to 'status'
                window.location.reload();
            } else {
                console.error("Failed to delete image", response.message);
            }
        }),
        error: (xhr, status, error) => {
            console.error("AJAX request failed", status, error);
        }
    });
}

           
       </script>
    


<%- include("../../views/partials/admin/footer") %>