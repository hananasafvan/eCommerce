<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message{
       color: red;
   }


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;


       }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border" id="product_name">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">
                                   
                                <%for(let i=0;i<brand.length;i++){%>     
                                       <option value="<%=brand[i].name%>">
                                           
                                        <%=brand[i].name%>

                                         
                                       </option>
                                       <%}%>
                                     
                               </select>
                               <div id="brand-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                   rows="4"></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                      
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control border">
                                       <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                              
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input  name="color" type="text" class="form-control border">
                                   </div>
                                   <div id="color-error" class="error-message"></div>
                               </div>
                            
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            

                                            <%for(let i=0;i<cat.length;i++){%>     
                                           
                                                <option value="<%=cat[i].name%>">
                                                     <%=cat[i].name%> 
                                                    
                                                </option>
                                               
                                                <%}%>
                                                
                                        </select>
                                        <div id="category-error" class="error-message"></div>

                                       

                                    </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                 <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                 <img src="" alt="" id="imgView1">
                                 <input class="form-control" type="file" name="images" id="input1"
                                                                    accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          


                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>


                                                          
                                                           
                                                       </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up"  type="button" onclick="validateAndSubmit()
                            ">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script>


function validateAndSubmit(){
    if(validateForm()){
        document.forms[0].submit()
    }
}


    //img  priview crope save submit (3 img)
       //1.priview imgs

function viewImage1(event){
    document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
}

function viewImage2(event){
    document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
    document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
}

        // 2. proces imgs => crope and change file name
          


function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }

//set thambline

const selectImage = []
document.getElementById('input').addEventListener('change',handleFileSelect)

function handleFileSelect(event){
    const addedImagesContainer = document.getElementById('addedImagesContainer')
    addedImagesContainer.innerHTML = ''
    const files = event.target.files
    for(let i=0;i<files.length;i++){
        const file = files[i]
        selectImage.push(file)
        const thumbnail =document.createElement('div')
        thumbnail.classList.add('thumbnail')

        const img = document.createElement('img')
        img.src = URL.createObjectURL(file)
        img.alt='thumbnail'
        img.style.width = '50px'
        img.style.height='auto'
        const removeIcone = document.createElement('span')
        removeIcone.classList.add('remove-icon')
        removeIcone.innerHTML = '&times;' //=>for remove icon simpel (X)
        removeIcone.addEventListener('click',function(){
            const index = selectImage.indexOf(file)
            if(index !== -1){
                selectImage.splice(index,1)
            }
            thumbnail.remove()
        })
        thumbnail.appendChild(img)
        thumbnail.appendChild(removeIcone)
        addedImagesContainer.appendChild(thumbnail)
    }
}

function validateForm() {
    clearErrorMessages();

    const name = document.getElementsByName('productName')[0].value.trim();
    const description = document.getElementById('descriptionid').value.trim();
    const brand = document.getElementsByName('brand')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName("salePrice")[0].value
    const quantity = document.getElementsByName('quantity')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const images = document.getElementById('input1').files;

    let isValid = true;

    
    if (name === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
        isValid = false;
    }

    
    if (description === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(description)) {
        displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
        isValid = false;
    }

    
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid price.');
        isValid = false;
    }
     
    

    
    if (!/^\d+$/.test(quantity) || parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    
    if (color === "") {
        displayErrorMessage('color-error', 'Please enter a product color.');
        isValid = false;
    }

    
    if (category === "") {
        displayErrorMessage('category-error', 'Please select a valid category.');
        isValid = false;
    }

    
    if (images.length === 0) {
        displayErrorMessage('images-error', 'Please upload at least one image.');
        isValid = false;
    }

    return isValid;
}

function clearErrorMessages() {
    document.getElementById('productName-error').innerHTML = '';
    document.getElementById('description-error').innerHTML = '';
    document.getElementById('regularPrice-error').innerHTML = '';
    document.getElementById('quantity-error').innerHTML = '';
    document.getElementById('color-error').innerHTML = '';
    document.getElementById('category-error').innerHTML = '';
    document.getElementById('images-error').innerHTML = '';
}

function displayErrorMessage(elementId, message) {
    document.getElementById(elementId).innerHTML = message;
}


</script>

  
     
<%- include("../../views/partials/admin/footer") %>



